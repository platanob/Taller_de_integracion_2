{"ast":null,"code":"var _jsxFileName = \"D:\\\\taller de integracios\\\\maquetado-inicial\\\\src\\\\components\\\\productsNew.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Navbar from './navbar';\nimport { Link } from 'react-router-dom';\nimport { dataContext } from \"./DataContext\";\nimport axios from 'axios';\nimport '../css-components/productAdmin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsAdmin = () => {\n  _s();\n  const {\n    data\n  } = useContext(dataContext);\n  const [loading, setLoading] = useState(true); // Estado para controlar la carga\n  const [userRole, setUserRole] = useState(null); // Estado para almacenar el rol del usuario\n\n  useEffect(() => {\n    // Obtener los productos\n    axios.get(\"http://127.0.0.1:5000/productosAdmin\").then(res => {\n      // Realizar operaciones con los datos recibidos si es necesario\n    }).catch(error => {\n      console.error(\"Error al recuperar los productos: \", error);\n    }).finally(() => {\n      setLoading(false); // Detener el estado de carga una vez que se obtienen los productos\n    });\n\n    // Obtener el rol del usuario\n    axios.get(\"http://127.0.0.1:5000/usuariorol\", {\n      withCredentials: true\n    }).then(res => {\n      const rol = res.data.message;\n      setUserRole(rol); // Almacenar el rol del usuario en el estado\n      if (rol === \"no\" && window.location.href === \"http://localhost:3000/productsAdmin\") {\n        window.location = \"home\";\n      }\n    }).catch(error => {\n      console.error(\"Error al recuperar el rol del usuario: \", error);\n    });\n  }, []); // El array vacío asegura que este efecto se ejecute solo una vez al montar el componente\n\n  // Si todavía está cargando, mostrar un mensaje de carga\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si la carga ha terminado y el rol del usuario es válido, mostrar la tabla con los datos\n  if (userRole !== \"no\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"table-admin\",\n        className: \"table table-light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si el rol del usuario no es válido, redirigir a la página de inicio\n  return null; // O podrías mostrar un mensaje de error u otra página en lugar de null\n};\n_s(ProductsAdmin, \"hLdoCegcc/EySrS0N6n1nJRmZec=\");\n_c = ProductsAdmin;\nexport default ProductsAdmin;\nvar _c;\n$RefreshReg$(_c, \"ProductsAdmin\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Navbar","Link","dataContext","axios","jsxDEV","_jsxDEV","ProductsAdmin","_s","data","loading","setLoading","userRole","setUserRole","get","then","res","catch","error","console","finally","withCredentials","rol","message","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","_c","$RefreshReg$"],"sources":["D:/taller de integracios/maquetado-inicial/src/components/productsNew.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Navbar from './navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { dataContext } from \"./DataContext\";\r\nimport axios from 'axios';\r\nimport '../css-components/productAdmin.css';\r\n\r\nconst ProductsAdmin = () => {\r\n  const { data } = useContext(dataContext);\r\n  const [loading, setLoading] = useState(true); // Estado para controlar la carga\r\n  const [userRole, setUserRole] = useState(null); // Estado para almacenar el rol del usuario\r\n\r\n  useEffect(() => {\r\n    // Obtener los productos\r\n    axios.get(\"http://127.0.0.1:5000/productosAdmin\")\r\n      .then((res) => {\r\n        // Realizar operaciones con los datos recibidos si es necesario\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al recuperar los productos: \", error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Detener el estado de carga una vez que se obtienen los productos\r\n      });\r\n\r\n    // Obtener el rol del usuario\r\n    axios.get(\"http://127.0.0.1:5000/usuariorol\", { withCredentials: true })\r\n      .then((res) => {\r\n        const rol = res.data.message;\r\n        setUserRole(rol); // Almacenar el rol del usuario en el estado\r\n        if (rol === \"no\" && window.location.href === \"http://localhost:3000/productsAdmin\") {\r\n          window.location = \"home\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al recuperar el rol del usuario: \", error);\r\n      });\r\n  }, []); // El array vacío asegura que este efecto se ejecute solo una vez al montar el componente\r\n\r\n  // Si todavía está cargando, mostrar un mensaje de carga\r\n  if (loading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  // Si la carga ha terminado y el rol del usuario es válido, mostrar la tabla con los datos\r\n  if (userRole !== \"no\") {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <table id='table-admin' className='table table-light'>\r\n          {/* Resto de tu código para mostrar la tabla */}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si el rol del usuario no es válido, redirigir a la página de inicio\r\n  return null; // O podrías mostrar un mensaje de error u otra página en lugar de null\r\n};\r\n\r\nexport default ProductsAdmin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAGX,UAAU,CAACK,WAAW,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhDD,SAAS,CAAC,MAAM;IACd;IACAK,KAAK,CAACU,GAAG,CAAC,sCAAsC,CAAC,CAC9CC,IAAI,CAAEC,GAAG,IAAK;MACb;IAAA,CACD,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CAAC,CACDE,OAAO,CAAC,MAAM;MACbT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;;IAEJ;IACAP,KAAK,CAACU,GAAG,CAAC,kCAAkC,EAAE;MAAEO,eAAe,EAAE;IAAK,CAAC,CAAC,CACrEN,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMM,GAAG,GAAGN,GAAG,CAACP,IAAI,CAACc,OAAO;MAC5BV,WAAW,CAACS,GAAG,CAAC,CAAC,CAAC;MAClB,IAAIA,GAAG,KAAK,IAAI,IAAIE,MAAM,CAACC,QAAQ,CAACC,IAAI,KAAK,qCAAqC,EAAE;QAClFF,MAAM,CAACC,QAAQ,GAAG,MAAM;MAC1B;IACF,CAAC,CAAC,CACDR,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIR,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAqB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;;EAEA;EACA,IAAInB,QAAQ,KAAK,IAAI,EAAE;IACrB,oBACEN,OAAA;MAAAqB,QAAA,gBACErB,OAAA,CAACL,MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVzB,OAAA;QAAO0B,EAAE,EAAC,aAAa;QAACC,SAAS,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV;;EAEA;EACA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACvB,EAAA,CAnDID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAqDnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}