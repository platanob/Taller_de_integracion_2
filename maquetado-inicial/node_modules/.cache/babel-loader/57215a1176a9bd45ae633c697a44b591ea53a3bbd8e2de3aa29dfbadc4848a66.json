{"ast":null,"code":"var _jsxFileName = \"D:\\\\taller de integracios\\\\maquetado-inicial\\\\src\\\\components\\\\productsNew.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './navbar';\nimport '../css-components/productsNew.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsNew = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [userRole, setUserRole] = useState(null);\n  useEffect(() => {\n    const fetchUserRole = async () => {\n      try {\n        const rolRes = await axios.get(\"http://127.0.0.1:5000/usuariorol\", {\n          withCredentials: true\n        });\n        const rol = rolRes.data.message;\n        setUserRole(rol);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error al recuperar el rol del usuario: \", error);\n        setLoading(false);\n      }\n    };\n    fetchUserRole(); // Llamada a la función para obtener el rol del usuario antes de cargar la página\n  }, []); // El array vacío asegura que este efecto se ejecute solo una vez al montar el componente\n\n  const pro = async () => {\n    // Lógica para enviar datos al servidor\n    // ...\n\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/newproduc\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (res.status === 200 || res.status === 201) {\n        alert(\"Producto agregado\");\n        if (userRole === \"no\") {\n          window.location = \"home\";\n        } else {\n          window.location = \"productsAdmin\";\n        }\n      } else {\n        console.error(\"No se pudo agregar el producto\");\n      }\n    } catch (error) {\n      console.error(\"Error al enviar la solicitud:\", error);\n    }\n  };\n  const mandardatos = event => {\n    event.preventDefault();\n    pro();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nuevo Producto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"formulario\",\n      onSubmit: mandardatos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsNew, \"/36HSeK2D4uESNWaZ0mwDZ4lWE8=\");\n_c = ProductsNew;\nexport default ProductsNew;\nvar _c;\n$RefreshReg$(_c, \"ProductsNew\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","axios","jsxDEV","_jsxDEV","ProductsNew","_s","loading","setLoading","userRole","setUserRole","fetchUserRole","rolRes","get","withCredentials","rol","data","message","error","console","pro","res","fetch","method","body","JSON","stringify","headers","status","alert","window","location","mandardatos","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","_c","$RefreshReg$"],"sources":["D:/taller de integracios/maquetado-inicial/src/components/productsNew.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar';\r\nimport '../css-components/productsNew.css';\r\nimport axios from 'axios';\r\n\r\nconst ProductsNew = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserRole = async () => {\r\n      try {\r\n        const rolRes = await axios.get(\"http://127.0.0.1:5000/usuariorol\", { withCredentials: true });\r\n        const rol = rolRes.data.message;\r\n        setUserRole(rol);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error al recuperar el rol del usuario: \", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserRole(); // Llamada a la función para obtener el rol del usuario antes de cargar la página\r\n  }, []); // El array vacío asegura que este efecto se ejecute solo una vez al montar el componente\r\n\r\n  const pro = async () => {\r\n    // Lógica para enviar datos al servidor\r\n    // ...\r\n\r\n    try {\r\n      const res = await fetch(\"http://127.0.0.1:5000/newproduc\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n\r\n      if (res.status === 200 || res.status === 201) {\r\n        alert(\"Producto agregado\");\r\n        if (userRole === \"no\") {\r\n          window.location = \"home\";\r\n        } else {\r\n          window.location = \"productsAdmin\";\r\n        }\r\n      } else {\r\n        console.error(\"No se pudo agregar el producto\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al enviar la solicitud:\", error);\r\n    }\r\n  };\r\n\r\n  const mandardatos = (event) => {\r\n    event.preventDefault();\r\n    pro();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n      <h1>Nuevo Producto</h1>\r\n      <form id='formulario' onSubmit={mandardatos}>\r\n        {/* Tu formulario aquí */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsNew;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}