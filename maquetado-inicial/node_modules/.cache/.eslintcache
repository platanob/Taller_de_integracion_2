[{"D:\\taller de integracios\\maquetado-inicial\\src\\components\\productsNew.jsx":"1","D:\\taller de integracios\\maquetado-inicial\\src\\App.js":"2","D:\\taller de integracios\\maquetado-inicial\\src\\components\\navbar.jsx":"3","D:\\taller de integracios\\maquetado-inicial\\src\\components\\productsAdmin.jsx":"4"},{"size":5356,"mtime":1697503897143,"results":"5","hashOfConfig":"6"},{"size":1425,"mtime":1697501702414,"results":"7","hashOfConfig":"6"},{"size":2127,"mtime":1697501847057,"results":"8","hashOfConfig":"6"},{"size":2599,"mtime":1697503929250,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"agzyf9",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\taller de integracios\\maquetado-inicial\\src\\components\\productsNew.jsx",[],[],[],"D:\\taller de integracios\\maquetado-inicial\\src\\App.js",[],[],"D:\\taller de integracios\\maquetado-inicial\\src\\components\\navbar.jsx",[],[],"D:\\taller de integracios\\maquetado-inicial\\src\\components\\productsAdmin.jsx",["24"],[],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Navbar from './navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { dataContext } from \"./DataContext\";\r\nimport axios from 'axios';\r\nimport '../css-components/productAdmin.css';\r\nimport '../css-components/carga.css';\r\nconst ProductsAdmin = () => {\r\n  const { data } = useContext(dataContext);\r\n  const [loading, setLoading] = useState(true); // Estado para controlar la carga\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://127.0.0.1:5000/productosAdmin\")\r\n      .then((res) => {\r\n        // Realizar operaciones con los datos recibidos si es necesario\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al recuperar los productos: \", error);\r\n      })\r\n\r\n    axios.get(\"http://127.0.0.1:5000/usuariorol\", { withCredentials: true })\r\n      .then((res) => {\r\n        const rol = res.data.message;\r\n        if (rol === \"no\" && window.location.href === \"http://localhost:3000/productsAdmin\") {\r\n          window.location = \"home\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al recuperar los productos: \", error);\r\n      })\r\n  }, []);\r\n\r\n  // Si todavía está cargando, mostrar un mensaje de carga\r\n  if (loading) {\r\n    return      ( <div className=\"loading-container\">\r\n    <div className=\"loading-message\">Cargando...</div>\r\n  </div>);\r\n  }\r\n\r\n  // Si la carga ha terminado, mostrar la tabla con los datos\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <table id='table-admin' className='table table-light'>\r\n      <thead className='thead-dark'>\r\n            <tr>\r\n              <th scope='col'>Nombre</th>\r\n              <th scope='col'>Marca</th>\r\n              <th scope='col'>Genero</th>\r\n              <th scope='col'>Costo</th>\r\n              <th>\r\n              <Link to=\"/productsNew\"\r\n                    className=\"btn btn-outline-primary\"\r\n                    role=\"button\"\r\n                    aria-pressed=\"true\"\r\n                    >\r\n                New Product\r\n              </Link>\r\n              </th>\r\n            </tr>\r\n            </thead>\r\n           <tbody>\r\n                {data.map((product) => {\r\n                  return (\r\n                      <tr key={product._id}>\r\n                        <td >{product.nombre}</td>\r\n                        <td>{product.marca}</td>\r\n                        <td>{product.talla}</td>\r\n                        <td>{product.costo}</td>\r\n                      </tr>\r\n                  );\r\n                })}\r\n            </tbody>  \r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsAdmin;\r\n",{"ruleId":"25","severity":1,"message":"26","line":10,"column":19,"nodeType":"27","messageId":"28","endLine":10,"endColumn":29},"no-unused-vars","'setLoading' is assigned a value but never used.","Identifier","unusedVar"]